<?xml version="1.0" encoding="utf-8"?>
<PROG NAME="ZDEMO_EXCEL27" VARCL="X" SUBC="1" RSTAT="T" RMAND="001" RLOAD="E" FIXPT="X" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="abap2xlsx Demo: Data conditional formatting with styles" LENGTH="56 "/>
   <textElement ID="S" KEY="P_PATH" ENTRY="D       ." LENGTH="24 "/>
   <textElement ID="S" KEY="P_READER" ENTRY="        Write back after using Reader" LENGTH="37 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZDEMO_EXCEL27
*&amp; Test Styles for ABAP2XLSX
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zdemo_excel27.

CONSTANTS: c_fish       TYPE string VALUE &apos;Fish&apos;.

DATA: lo_excel                TYPE REF TO zcl_excel,
      lo_worksheet            TYPE REF TO zcl_excel_worksheet,
      lo_range                TYPE REF TO zcl_excel_range,
      lo_data_validation      TYPE REF TO zcl_excel_data_validation,
      lo_style_conditional    TYPE REF TO zcl_excel_style_conditional,
      lo_style_1              TYPE REF TO zcl_excel_style,
      lo_style_2              TYPE REF TO zcl_excel_style,
      lv_style_1_guid         TYPE zexcel_cell_style,
      lv_style_2_guid         TYPE zexcel_cell_style,
      ls_cellis               TYPE zexcel_conditional_cellis.


DATA: lv_title          TYPE zexcel_sheet_title.

CONSTANTS: gc_save_file_name TYPE string VALUE &apos;27_ConditionalFormatting.xlsx&apos;.
INCLUDE zdemo_excel_outputopt_incl.


START-OF-SELECTION.


  &quot; Creates active sheet
  CREATE OBJECT lo_excel.

  lo_style_1                        = lo_excel-&gt;add_new_style( ).
  lo_style_1-&gt;fill-&gt;filltype        = zcl_excel_style_fill=&gt;c_fill_solid.
  lo_style_1-&gt;fill-&gt;bgcolor-rgb   = zcl_excel_style_color=&gt;c_green.
  lv_style_1_guid                   = lo_style_1-&gt;get_guid( ).

  lo_style_2                        = lo_excel-&gt;add_new_style( ).
  lo_style_2-&gt;fill-&gt;filltype        = zcl_excel_style_fill=&gt;c_fill_solid.
  lo_style_2-&gt;fill-&gt;bgcolor-rgb     = zcl_excel_style_color=&gt;c_red.
  lv_style_2_guid                   = lo_style_2-&gt;get_guid( ).

  &quot; Get active sheet
  lo_worksheet        = lo_excel-&gt;get_active_worksheet( ).
  lv_title = &apos;Data Validation&apos;.
  lo_worksheet-&gt;set_title( lv_title ).
  &quot; Set values for dropdown
  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;A&apos; ip_value = c_fish ).
  lo_worksheet-&gt;set_cell( ip_row = 4 ip_column = &apos;A&apos; ip_value = &apos;Anchovy&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 5 ip_column = &apos;A&apos; ip_value = &apos;Carp&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 6 ip_column = &apos;A&apos; ip_value = &apos;Catfish&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 7 ip_column = &apos;A&apos; ip_value = &apos;Cod&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 8 ip_column = &apos;A&apos; ip_value = &apos;Eel&apos; ).
  lo_worksheet-&gt;set_cell( ip_row = 9 ip_column = &apos;A&apos; ip_value = &apos;Haddock&apos; ).

  lo_range            = lo_excel-&gt;add_new_range( ).
  lo_range-&gt;name      = c_fish.
  lo_range-&gt;set_value( ip_sheet_name    = lv_title
                       ip_start_column  = &apos;A&apos;
                       ip_start_row     = 4
                       ip_stop_column   = &apos;A&apos;
                       ip_stop_row      = 9 ).

  &quot; 1st validation
  lo_data_validation              = lo_worksheet-&gt;add_new_data_validation( ).
  lo_data_validation-&gt;type        = zcl_excel_data_validation=&gt;c_type_list.
  lo_data_validation-&gt;formula1    = c_fish.
  lo_data_validation-&gt;cell_row    = 2.
  lo_data_validation-&gt;cell_column = &apos;C&apos;.
  lo_worksheet-&gt;set_cell( ip_row = 2 ip_column = &apos;C&apos; ip_value = &apos;Select a value&apos; ).

  lo_style_conditional = lo_worksheet-&gt;add_new_conditional_style( ).
  lo_style_conditional-&gt;rule      = zcl_excel_style_conditional=&gt;c_rule_cellis.
  ls_cellis-formula     = &apos;&quot;Anchovy&quot;&apos;.
  ls_cellis-operator    = zcl_excel_style_conditional=&gt;c_operator_equal.
  ls_cellis-cell_style  = lv_style_1_guid.
  lo_style_conditional-&gt;mode_cellis = ls_cellis.
  lo_style_conditional-&gt;priority  = 1.
  lo_style_conditional-&gt;set_range( ip_start_column  = &apos;C&apos;
                                   ip_start_row     = 2
                                   ip_stop_column   = &apos;C&apos;
                                   ip_stop_row      = 2 ).

  lo_style_conditional = lo_worksheet-&gt;add_new_conditional_style( ).
  lo_style_conditional-&gt;rule        = zcl_excel_style_conditional=&gt;c_rule_cellis.
  ls_cellis-formula     = &apos;&quot;Carp&quot;&apos;.
  ls_cellis-operator    = zcl_excel_style_conditional=&gt;c_operator_equal.
  ls_cellis-cell_style  = lv_style_2_guid.
  lo_style_conditional-&gt;mode_cellis = ls_cellis.
  lo_style_conditional-&gt;priority    = 2.
  lo_style_conditional-&gt;set_range( ip_start_column  = &apos;C&apos;
                                   ip_start_row     = 2
                                   ip_stop_column   = &apos;C&apos;
                                   ip_stop_row      = 2 ).



*** Create output
  lcl_output=&gt;output( lo_excel ).</source>
</PROG>
